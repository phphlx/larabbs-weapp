<style lang="less">
@import (css) "./assets/style/app.wxss";
.page {
  background-color: #FFF;
}
</style>

<script>
import wepy from '@wepy/core'
import eventHub from './common/eventHub'
import vuex from '@wepy/x'
import promisify from '@wepy/use-promisify'

wepy.use(vuex)
wepy.use(promisify)

wepy.app({
  store: require('./store').default,
  hooks: {
    // App 级别 hook，对整个 App 生效
    // 同时存在 Page hook 和 App hook 时，优先执行 Page hook，返回值再交由 App hook 处
    'before-setData': function (dirty) {
      console.log('setData dirty: ', dirty)
      return dirty
    }
  },
  globalData: {
    userInfo: null,
    naviData: {
      showNavbar: true,
      showHome: true
    },
    home: 'pages/topics/index'
  },

  async onLaunch() {
    this.$store = this.$options.store
    // this.updateUnreadCount()

    // setInterval(() => {
    //   this.updateUnreadCount()
    // }, 60000)
    wepy.wx.login().then(res => {
      console.log('login ', res)
    })

    await this.getNaviData()

    // this.testAsync()
    // eventHub.$on('app-launch', (...args) => {
    //   console.log('app-launch event emitted, the params are:')
    //   console.log(args)
    // })

    const updateManager = await wx.getUpdateManager()

    updateManager.onCheckForUpdate(function (res) {
      console.log(res.hasUpdate)
    })

    updateManager.onUpdateReady(function () {
      wx.showModal({
        title: '更新提示',
        content: '新版本已经准备好，是否重启应用？',
        success(res) {
          if (res.confirm) {
            updateManager.applyUpdate()
          }
        }
      })
    })
  },

  methods: {
    async updateUnreadCount() {
      await this.$store.dispatch('updateUnreadCount')
    },
    can(targetPerm) {
      if (!this.$store.getters.isLoggedIn) {
        return false
      }

      // 判断权限中是否有目标权限
      if (this.$store.getters.perms.find(perm => perm.name === targetPerm)) {
        return true
      }

      return false
    },

    sleep (s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise resolved')
        }, s * 1000)
      })
    },

    async testAsync () {
      let d = await this.sleep(3)
      console.log(d)
    },

    async getNaviData() {
      // 获取菜单按钮（右上角胶囊按钮）的布局位置信息，坐标信息以屏幕左上角为原点。
      let menuRect = await wx.getMenuButtonBoundingClientRect()
      this.$options.globalData.naviData.height_capsule = menuRect.height
      this.$options.globalData.naviData.width_capsule = menuRect.width
      this.$options.globalData.naviData.paddingTop = menuRect.top
      this.$options.globalData.naviData.paddingBottom = menuRect.top - wx.getSystemInfoSync().statusBarHeight
      this.$options.globalData.naviData.height = menuRect.bottom + this.$options.globalData.naviData.paddingBottom
    }
  }
})
</script>
<config>
{
  pages: [
    'pages/articles/index',
    'pages/videos/user-index',
    'pages/videos/show',
    'pages/videos/create',
    'pages/videos/edit',
    'pages/users/me',
    'pages/users/edit',
    'pages/users/show',
    'pages/auth/login',
    'pages/auth/register',
    'pages/quns/create',
    'pages/quns/user-index',
    'pages/quns/show',
    'pages/quns/edit',
    'pages/tools/time',
    'pages/tools/color',
  ],
  window: {
    navigationStyle: 'custom',
    backgroundTextStyle: 'light',
    navigationBarBackgroundColor: '#fff',
    navigationBarTitleText: 'miniapp',
    navigationBarTextStyle: 'black'
  },
  tabBar: {
    list: [{
      pagePath: 'pages/articles/index',
      text: '首页',
      iconPath: 'assets/images/index.png',
      selectedIconPath: 'assets/images/index_selected.png'
    }, {
      pagePath: 'pages/users/me',
      text: '我的',
      iconPath: 'assets/images/user.png',
      selectedIconPath: 'assets/images/user_selected.png'
    }],
    color: '#707070',
    selectedColor: '#00b5ad'
  }
}
</config>

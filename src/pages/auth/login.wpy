<style lang="less">
.login-wrap {
  margin-top: 90px;
}
.weui-toptips {
  display: block;
}
.error-message {
  color: #E64340;
}
</style>
<template>
  <div class="page">
    <div class="page__bd">
      <navigation-bar :navbar="navbar"></navigation-bar>

      <div class="page__bd login-wrap">
        <div class="weui-form__control-area">
          <div class="weui-cells__group weui-cells__group_form">
            <div class="weui-cells__title">登录</div>
            <div class="weui-cells">
              <label for="js_input1" class="weui-cell weui-cell_active">
                <div class="weui-cell__hd {{ (errors.username || errors.email || errors.phone) ? 'weui-cell_warn' : ''}}">
                  <span class="weui-label">用户名</span>
                </div>
                <div class="weui-cell__bd">
                  <input id="js_input1" class="weui-input" placeholder="请输入邮箱或手机号" v-model="form.username" name="username">
                </div>
              </label>

              <label for="js_input3" class="weui-cell weui-cell_active">
                <div class="weui-cell__hd {{ (errors.password) ? 'weui-cell_warn' : ''}}">
                  <span class="weui-label">密码</span>
                </div>
                <div class="weui-cell__bd">
                  <input id="js_input3" class="weui-input" placeholder="请输入密码" type="password" name="password"
                         v-model="form.password">
                </div>
              </label>
            </div>

            <div class="weui-cells__tips">
              如果你还没有账号可以
              <a url="/pages/auth/register">注册新用户</a>
            </div>
          </div>
        </div>

        <div class="weui-form__tips-area">
          <div v-if="errors.username" class="weui-form__tips error-message">{{ errors.username[0] }}</div>
          <div v-if="errors.email" class="weui-form__tips error-message">{{ errors.email[0] }}</div>
          <div v-if="errors.phone" class="weui-form__tips error-message">{{ errors.phone[0] }}</div>

          <div v-if="errors.password" class="weui-form__tips error-message">{{ errors.password[0] }}</div>

          <div v-if="errorMessage" class="weui-form__tips error-message">{{ errorMessage }} 111</div>
        </div>

        <div class="weui-btn-area">
          <button class="weui-btn" type="primary" @tap="submit">登录</button>
        </div>
      </div>
    </div>
  </div>
</template>
<config>
{
navigationBarTitleText: '登录',
usingComponents: {
"navigation-bar": "~@/components/navigation-bar",
}
}
</config>
<script>
import wepy from '@wepy/core'
import store from '@/store'
import WeValidator from 'we-validator'

wepy.page({
  store,
  data: {
    navbar: {},
    // 用户名
    form: {},
    // 是否有错
    errors: {},
    // 错误信息
    errorMessage: ''
  },
  onLoad() {
    this.navbar = this.$app.$options.globalData.naviData
    this.navbar.title = '登录'
    this.navbar.showBack = getCurrentPages().length > 1
    this.navbar.showHome = false
  },
  onReady() {
    this.initValidator()
  },
  methods: {
    initValidator() {
      // 实例化
      this.validatorInstance = new WeValidator({
        multiCheck: true,
        rules: {
          username: {
            required: true
          },
          password: {
            required: true,
            minlength: 6
          }
        },
        messages: {
          username: {
            required: '请输入用户名'
          },
          password: {
            required: '请填写密码',
            minlength: '密码最少 6 位数'
          }
        },
        // onMessage: (data) => {
        //   this.$set(this.errors, data.name, [data.msg])
        //   this.errorMessage = data.msg
        // }

        onMessage: (data) => {
          let errors = {}
          Object.keys(data).map(function(key) {
            errors[key] = [data[key].msg]
          })

          this.errors = errors
        }
      })
    },
    // 表单提交
    async submit() {
      this.errors = {}
      // 提交时重置错误
      if (!this.validatorInstance.checkData(this.form)) {
        return
      }

      try {
        await this.$store.dispatch('login', this.form)

        wx.navigateBack()
      } catch (err) {
        this.errorMessage = err.response.data.message
      }
    }
  },
  // 页面打开事件
  async onShow() {
    try {
      await this.$store.dispatch('login')
      wx.navigateBack()
    } catch (err) {
    }
  }
})
</script>

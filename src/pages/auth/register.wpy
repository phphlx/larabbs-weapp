<style lang="less">
.register-wrap {
  margin-top: 90px;
}
.error-message {
  color: #E64340;
}
.catpcha-img {
  height: 40px;
}
</style>
<template>
  <div class="page">
    <navigation-bar :navbar="navbar"></navigation-bar>
    <div class="page__bd register-wrap">

      <div class="weui-form__control-area">
        <div class="weui-cells__group weui-cells__group_form">
          <div class="weui-cells__title">注册</div>
          <div class="weui-cells">
            <label for="js_input1" class="weui-cell weui-cell_active">
              <div class="weui-cell__hd {{ (errors.username || errors.email || errors.phone) ? 'weui-cell_warn' : ''}}">
                <span class="weui-label">用户名</span>
                <div class="weui-cell__desc">登录名</div>
              </div>
              <div class="weui-cell__bd">
                <input id="js_input1" class="weui-input" placeholder="请输入邮箱或手机号" v-model="form.username" name="username">
              </div>
            </label>

            <label for="js_input2" class="weui-cell weui-cell_active">
              <div class="weui-cell__hd {{ (errors.name) ? 'weui-cell_warn' : ''}}">
                <span class="weui-label">姓名</span>
              </div>
              <div class="weui-cell__bd">
                <input id="js_input2" class="weui-input" placeholder="请输入姓名" name="name" v-model="form.name">
              </div>
            </label>

            <label for="js_input3" class="weui-cell weui-cell_active">
              <div class="weui-cell__hd {{ (errors.password) ? 'weui-cell_warn' : ''}}">
                <span class="weui-label">密码</span>
              </div>
              <div class="weui-cell__bd">
                <input id="js_input3" class="weui-input" placeholder="请输入密码" type="password" name="password"
                       v-model="form.password">
              </div>
            </label>
          </div>
        </div>
      </div>

      <div class="weui-form__tips-area">
        <div v-if="errors.username" class="weui-form__tips error-message">{{ errors.username[0] }}</div>
        <div v-if="errors.email" class="weui-form__tips error-message">{{ errors.email[0] }}</div>
        <div v-if="errors.phone" class="weui-form__tips error-message">{{ errors.phone[0] }}</div>

        <div v-if="errors.name" class="weui-form__tips error-message">{{ errors.name[0] }}</div>

        <div v-if="errors.password" class="weui-form__tips error-message">{{ errors.password[0] }}</div>
      </div>

      <div class="weui-btn-area">
        <button class="weui-btn" type="primary" @tap="submit">注册</button>
      </div>

    </div>
  </div>
</template>
<config>
{
navigationBarTitleText: '注册',
usingComponents: {
"navigation-bar": "~@/components/navigation-bar",
}
}
</config>
<script>
import wepy from '@wepy/core'
import store from '@/store'
import WeValidator from 'we-validator'

wepy.page({
  store,
  data: {
    navbar: {},
    // 表单
    form: {},
    // 表单错误
    errors: {}
  },
  onLoad() {
    this.navbar = this.$app.$options.globalData.naviData
    this.navbar.title = '注册'
    this.navbar.showBack = getCurrentPages().length > 1
    this.navbar.showHome = false
  },
  onReady() {
    this.initValidator()
  },
  methods: {
    initValidator() {
      // 注册表单验证实例化
      this.validatorInstance = new WeValidator({
        multiCheck: true,
        rules: {
          username: {
            required: true
          },
          name: {
            required: true
          },
          password: {
            required: true,
            minlength: 6
          }
        },
        messages: {
          username: {
            required: '请输入邮箱或手机号'
          },
          name: {
            required: '请输入姓名'
          },
          password: {
            required: '请填写密码',
            minlength: '密码最少 6 位数'
          }
        },
        onMessage: (data) => {
          let errors = {}
          Object.keys(data).map(function(key) {
            errors[key] = [data[key].msg]
          })

          this.errors = errors
        }
      })
    },
    // 表单提交
    async submit() {
      // 提交之前清空错误信息
      this.errors = {}
      if (!this.validatorInstance.checkData(this.form)) {
        return
      }

      try {
        let formData = this.form
        let reg = /(^[A-Za-z0-9]+([_\.][A-Za-z0-9]+)*@([A-Za-z0-9\-]+\.)+[A-Za-z]{2,6}$)/

        if (reg.test(this.form.username)) {
          formData.email = formData.username
          delete formData.phone
        } else {
          formData.phone = formData.username
          delete formData.email
        }

        await this.$store.dispatch('register', formData)

        wx.showToast({
          title: '注册成功',
          icon: 'success'
        })

        // 跳转到我的页面
        setTimeout(async () => {
          wx.switchTab({
            url: '/pages/users/me'
          })
        }, 2000)
      } catch (err) {
        // 验证码错误
        if (err.response.statusCode === 401) {
          this.$set(this.errors, 'verification_code', ['验证码错误'])
        }

        // 表单错误
        if (err.response.statusCode === 422) {
          this.errors = err.response.data.errors
        }
      }
    }
  }
})
</script>

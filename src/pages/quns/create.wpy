<style lang="less">
.content {
  height: 5.3em;
}
.error-message {
  color: #E64340;
}
.avatar {
  width: 80px;
  height: 80px;
  display: block;
  border-radius: 50%;
}
.avatar-wrap {
  margin-top: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.up-image{
  display: flex;
  align-items: center;
  background-color: #fff;
  margin-top: 20rpx;
  flex-wrap: wrap;
  flex: 1;
}
.up-image>.list{
  flex: 0 0 33.3333%;
  margin-bottom: 20rpx;
  position: relative;
}
.up-image>.list>image{
  width: 150rpx;
  height: 150rpx;
  margin: auto;
  border-radius: 6rpx;
  box-shadow: 0rpx 8rpx 8rpx #ccc;
}
.up-image>.list>.delete{
  position: absolute;
  top: -10rpx;
  right: 0;
  background-color: #fc3901;
  color: #fff;
  width: 34rpx;
  height: 34rpx;
  border-radius: 100%;
  font-size: 24rpx;
  text-align: center;
  line-height: 34rpx;
}
.up-tip{
  font-size: 24rpx;
  color: #999;
  background-color: #fff;
  padding: 0 30rpx 30rpx 30rpx;
}
.up-tip>text{
  color: #fc3901;
}
</style>
<template>
  <div class="page__bd">
    <navigation-bar :navbar="navbar"></navigation-bar>

    <div class="weui-cells__title" :class="{'weui-cell_warn': errors.name}">名称</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input" :class="{'weui-cell_warn': errors.name}">
        <div class="weui-cell__bd">
          <input class="weui-input" placeholder="请输入名称" name="title" v-model="form.name" />
        </div>
        <div v-if="errors.name" class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <div v-if="errors.name" class="weui-cells__tips error-message">{{ errors.name[0] }}</div>

    <div class="weui-cells__title" :class="{'weui-cell_warn': errors.intro}">引导语</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input" :class="{'weui-cell_warn': errors.intro}">
        <div class="weui-cell__bd">
          <textarea class="weui-textarea content" placeholder="请输入引导语" v-model="form.intro"></textarea>
        </div>
        <div v-if="errors.intro" class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <div v-if="errors.intro" class="weui-cells__tips error-message">{{ errors.intro[0] }}</div>

    <div class="weui-cells__title" :class="{'weui-cell_warn': errors.type}">选择模式</div>
    <div class="weui-cells weui-cells_radio weui-cells_after-title">
      <radio-group bindchange="radioChange">
        <label class="weui-cell weui-check__label">
          <div class="weui-cell__bd">1, 当前页面显示二维码</div>
          <div class="weui-cell__ft">
            <radio class="weui-check" value="1" checked="{{ form.type == 1 }}"/><i class="weui-icon-checked"></i>
          </div>
        </label>
        <label class="weui-cell weui-check__label">
          <div class="weui-cell__bd">2, 打开页面预览二维码</div>
          <div class="weui-cell__ft"><radio class="weui-check" value="2"/><i class="weui-icon-checked"></i></div>
        </label>
      </radio-group>
    </div>
    <div v-if="errors.type" class="weui-cells__tips error-message">{{ errors.type[0] }}</div>

    <div class="weui-cells__title" :class="{'weui-cell_warn': errors.avatar}">头像</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input" :class="{'weui-cell_warn': errors.avatar}">
        <div class="weui-cell__bd">
          <div class="avatar-wrap">
            <van-uploader accept="image" file-list="{{ form.avatar }}" multiple="{{false}}" max-count="1"
                          bind:after-read="uploadAvatar" bind:delete="deleteAvatar" />
          </div>
        </div>
        <div v-if="errors.avatar" class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <div v-if="errors.avatar" class="weui-cells__tips error-message">{{ errors.avatar[0] }}</div>

    <div class="weui-cells__title" :class="{'weui-cell_warn': errors.qrcode}">二维码</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input" :class="{'weui-cell_warn': errors.qrcode}">
        <div class="weui-cell__bd">
          <div class="avatar-wrap">
            <van-uploader accept="image" file-list="{{ form.qrcode }}" multiple="{{false}}" max-count="1"
                          bind:after-read="uploadQrcode" bind:delete="deleteQrcode" />
          </div>
        </div>
        <div v-if="errors.qrcode" class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <div v-if="errors.qrcode" class="weui-cells__tips error-message">{{ errors.qrcode[0] }}</div>

    <div class="weui-cells__title" :class="{'weui-cell_warn': errors.num}">人数</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input" :class="{'weui-cell_warn': errors.num}">
        <div class="weui-cell__bd">
          <input class="weui-input" placeholder="请输入人数" name="num" v-model="form.num" />
        </div>
        <div v-if="errors.num" class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <div v-if="errors.num" class="weui-cells__tips error-message">{{ errors.num[0] }}</div>

    <div class="weui-cells__title" :class="{'weui-cell_warn': errors.btnText}">按钮文本</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input" :class="{'weui-cell_warn': errors.btnText}">
        <div class="weui-cell__bd">
          <input class="weui-input" placeholder="请输入按钮文本(默认为加入" name="btnText" v-model="form.btnText" />
        </div>
        <div v-if="errors.btnText" class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <div v-if="errors.btnText" class="weui-cells__tips error-message">{{ errors.btnText[0] }}</div>

    <div class="weui-cells__title" :class="{'weui-cell_warn': errors.shareTitle}">分享标题</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input" :class="{'weui-cell_warn': errors.shareTitle}">
        <div class="weui-cell__bd">
          <input class="weui-input" placeholder="请输入分享标题" name="shareTitle" v-model="form.shareTitle" />
        </div>
        <div v-if="errors.shareTitle" class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <div v-if="errors.shareTitle" class="weui-cells__tips error-message">{{ errors.shareTitle[0] }}</div>

    <div class="weui-cells__title" :class="{'weui-cell_warn': errors.shareImg}">分享封面图 (宽高比 5:4)</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input" :class="{'weui-cell_warn': errors.shareImg}">
        <div class="weui-cell__bd">
          <div class="avatar-wrap">
            <van-uploader accept="image" file-list="{{ form.shareImg }}" multiple="{{false}}" max-count="1"
                          bind:after-read="uploadShareImg" bind:delete="deleteShareImg" />
          </div>
        </div>
        <div v-if="errors.shareImg" class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <div v-if="errors.shareImg" class="weui-cells__tips error-message">{{ errors.shareImg[0] }}</div>

    <div class="weui-btn-area">
      <button class="weui-btn" type="primary" @tap="submit">提交</button>
    </div>
  </div>
</template>
<config>
{
navigationBarTitleText: '制作group',
usingComponents: {
"van-uploader": "module:@vant/weapp/dist/uploader",
"navigation-bar": "~@/components/navigation-bar",
}
}
</config>
<script>
import wepy from '@wepy/core'
import store from '@/store'
import { mapGetters } from '@wepy/x'
import {uploadImg, createQun} from '@/api/qun'
import eventHub from '@/common/eventHub'
import WeValidator from 'we-validator'

wepy.page({
  store,
  computed: {
    // 用户信息
    ...mapGetters(['isLoggedIn'])
  },
  data: {
    navbar: {},
    form: {
      avatar: [],
      qrcode: [],
      shareImg: [],
      type: 1
    },
    errors: {}
  },
  onLoad(options) {
    // 未登录跳转到登录页面
    if (!this.isLoggedIn) {
      wx.navigateTo({
        url: '/pages/auth/login'
      })
    }

    this.navbar = this.$app.$options.globalData.naviData
    this.navbar.title = '创建'
    this.navbar.showBack = getCurrentPages().length > 1
    this.navbar.showHome = false
  },
  onReady() {
    this.initValidator()
  },
  methods: {
    initValidator() {
      // 实例化
      this.validatorInstance = new WeValidator({
        multiCheck: true,
        rules: {
          name: {
            required: true
          },
          avatar: {
            required: true
          },
          intro: {
            required: true
          },
          type: {
            required: true
          },
          qrcode: {
            required: true
          },
          num: {
            required: true
          },
          shareTitle: {
            required: true
          },
          shareImg: {
            required: true
          }
        },
        messages: {
          name: {
            required: '请输入名称'
          },
          avatar: {
            required: '没有上传头像'
          },
          intro: {
            required: '请输入广告语'
          },
          type: {
            required: '请选择模式'
          },
          qrcode: {
            required: '请上传二维码'
          },
          num: {
            required: '请输入人数'
          },
          shareTitle: {
            required: '请输入分享标题'
          },
          shareImg: {
            required: '没有上传分享封面图'
          }
        },
        onMessage: (data) => {
          let errors = {}
          Object.keys(data).map(function(key) {
            errors[key] = [data[key].msg]
          })

          this.errors = errors
        }
      })
    },
    async radioChange(event) {
      this.form.type = event.$wx.detail.value
    },
    async uploadAvatar(event) {
      const { file } = event.$wx.detail
      try {
        let imageResponse = await uploadImg(file.url)
        let responseData = JSON.parse(imageResponse.data)
        this.form.avatar = [{'url': responseData.path}]
      } catch (err) {}
    },
    async deleteAvatar (event) {
      var index = event.$wx.detail.index
      this.form.avatar.splice(index - 1, 1)
    },
    async uploadQrcode(event) {
      const { file } = event.$wx.detail
      try {
        let imageResponse = await uploadImg(file.url)
        let responseData = JSON.parse(imageResponse.data)
        this.form.qrcode = [{'url': responseData.path}]
      } catch (err) {}
    },
    async deleteQrcode (event) {
      var index = event.$wx.detail.index
      this.form.qrcode.splice(index - 1, 1)
    },
    async uploadShareImg(event) {
      const { file } = event.$wx.detail
      try {
        let imageResponse = await uploadImg(file.url)
        let responseData = JSON.parse(imageResponse.data)
        this.form.shareImg = [{'url': responseData.path}]
      } catch (err) {}
    },
    async deleteShareImg (event) {
      var index = event.$wx.detail.index
      this.form.shareImg.splice(index - 1, 1)
    },
    // 提交表单
    async submit () {
      this.errors = {}
      if (!this.validatorInstance.checkData(this.form)) {
        return
      }

      // 请求发布回复接口
      let createResponse = await createQun(this.form)

      // 提示发布成功
      wx.showToast({
        title: '发布成功',
        icon: 'success'
      })

      // 2 秒后返回上一页
      setTimeout(function() {
        eventHub.$emit('qun-created', createResponse.data)
        wx.navigateBack()
      }, 2000)
    }
  }
})
</script>
